#!/bin/sh
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

IS_BDB=$1
IS_QMASTER=$2
IS_SHADOW=$3
IS_EXECD=$4

SPOOLING_METHOD=${cfg.spooling.method}
DB_SPOOLING_SERVER=${cfg.db.spooling.server}
EXIT_CODE=0

# run the command as admin user
RunAsAdmin()
{
   ${cfg.sge.root}/utilbin/${host.arch}/adminrun ${cfg.admin.user} "$@"
}

# run the command as executor then if it fails as admin user
RunAsBoth()
{
   ALL="$@"
   $ALL
   EXIT_CODE=$?
   if [ $EXIT_CODE -ne 0 -a "${user.name}" != "${cfg.admin.user}" ]; then
      RunAsAdmin "$ALL"
      EXIT_CODE=$?
   fi
}

# if Berkeley db server host
if [ "$IS_BDB" = true ]; then
   # if BDB server spooling is enabled check write permission on BDB spool dir
   if [ "$SPOOLING_METHOD" = "berkeleydb" -a "$DB_SPOOLING_SERVER" != "none"  ]; then
      RunAsBoth test -w ${cfg.db.spooling.dir}
      if [ $EXIT_CODE -ne 0 ]; then
         exit 10;
      fi
   fi
fi

# if qmaster host
if [ "$IS_QMASTER" = true ]; then
   # TODO check qmaster port usage

   # check write permission on qmaster spool dir
   RunAsBoth test -w ${cfg.qmaster.spool.dir}
   if [ $EXIT_CODE -ne 0 ]; then
      exit 20;
   fi

   # check write permission on global execd spool dir
   RunAsBoth test -w ${cfg.execd.spool.dir}
   if [ $EXIT_CODE -ne 0 ]; then
      exit 21;
   fi

   # if JMX is enabled check write permission on JMX keystore dir
   USE_JMX=${add.sge.jmx}
   if [ "$USE_JMX" = true ]; then
      # TODO check JMX port usage

      RunAsBoth test -w ${cfg.sge.jmx.ssl.keystore}
      if [ $EXIT_CODE -ne 0 ]; then
         exit 22;
      fi
   fi

   # if local BDB spooling is enabled check write permission on BDB spool dir
   # if exists ->  fail
   if [ "$SPOOLING_METHOD" = "berkeleydb" -a "$DB_SPOOLING_SERVER" = "none"  ]; then
      if [ -d ${cfg.db.spooling.dir} ]; then
         exit 24;
      fi

      RunAsBoth test -w ${cfg.db.spooling.dir}
      if [ $EXIT_CODE -ne 0 ]; then
         exit 23;
      fi
   fi
fi

# if shadowd host
#if [ "$IS_SHADOW" = true ]; then
#fi

# if execd host
if [ "$IS_EXECD" = true ]; then
   # TODO check execd port usage

   # check write permission on local execd spool dir
   RunAsBoth test -w ${cfg.exec.spool.dir.local}
   if [ $EXIT_CODE -ne 0 ]; then
      exit 40;
   fi
fi

exit 0;