/**
 * Copyright 2003-2004 Sun Microsystems, Inc. All rights reserved.
 * Use is subject to license terms.
 * -----------------------------------------------------------------------------
 *  Generated from java_mapping.jsp
 *  !!! DO NOT EDIT THIS FILE !!!
 */
<%
  com.sun.grid.cull.JavaHelper jh = (com.sun.grid.cull.JavaHelper)params.get("javaHelper");
  com.sun.grid.cull.CullDefinition cullDef = (com.sun.grid.cull.CullDefinition)params.get("cullDef");
  
%>
package com.sun.grid.jgdi.configuration.reflect;

import java.util.Map;
import java.util.HashMap;

/**
 *  This class provides the mapping from cull type to its java classes
 *  @author richard.hierlmeier@sun.com
 */
public class CullTypeMapping {
   
   private static Map typeMap;
   
   private static void reg(String cullType, Class clazz) {
      typeMap.put(cullType, clazz);
   }
   
   private static void init() {
      if(typeMap == null ) {
        synchronized(CullTypeMapping.class) {
           if (typeMap == null ) {
               typeMap = new HashMap();
<%  java.util.Iterator iter = cullDef.getObjectNames().iterator();

    while( iter.hasNext() ) {
      String name = (String)iter.next();
      com.sun.grid.cull.CullObject cullObj = cullDef.getCullObject(name);       

%>              reg("<%=name%>", <%=jh.getFullClassName(cullObj)%>.class);   
<% } // end of while %>
            }
         }
      }
   }
   
   /**
    *   Get the java class which represents a cull type
    *   @param  cullType  name of the cull type
    *   @return the java class
    *   @throws IllegalArgumentException if the cull type is unknown
    */
   public static Class getClassForCullType(String cullType) {
      init();
      Class ret = (Class)typeMap.get(cullType);
      if (ret == null) {
         throw new IllegalArgumentException("Unknown cull type '" + cullType + "'");
      }
      return ret;
   }
}
