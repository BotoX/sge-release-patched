/**
 *  Generated from java_delevent.jsp
 *  !!! DO NOT EDIT THIS FILE !!!
 */
<%
  com.sun.grid.cull.JavaHelper jh = (com.sun.grid.cull.JavaHelper)params.get("javaHelper");
  com.sun.grid.cull.CullObject cullObj = (com.sun.grid.cull.CullObject)params.get("cullObj");
  com.sun.grid.cull.CullAttr   attr = null;
  
  String name = jh.getNonPrimitiveClassname(cullObj);
  
%>
package <%=jh.getPackageName()%>;

import com.sun.grid.jgdi.event.DelEvent;
<% if(cullObj.getType() != cullObj.TYPE_PRIMITIVE) { %>
import <%=jh.getFullClassName(cullObj)%>;
<% } %>

/**
 */
public class <%=name%>DelEvent extends DelEvent {

<% // Default constructor ----------------------------------------- %>
  public <%=name%>DelEvent(long timestamp, int eventID) {
     super(timestamp, eventID, <%=jh.getClassName(cullObj)%>.class );
  } // end of default constructor

  public void set(<%=jh.getClassName(cullObj)%> obj) {
     super.setChangedObject(obj);
  }
  
  public <%=jh.getClassName(cullObj)%> get() {
     return (<%=jh.getClassName(cullObj)%>) getChangedObject();
  }

  
<%@include file="java_event_pkinfo.jsp"%>    
  
   
   /**
    *  Determine if this event has deleted <code>obj</code>
    *  @param   obj  the object
    *  @return  <code>true</code> if this event has deleted <code>obj</code>
    */
   public boolean hasDeletedObject(Object obj) {

      if (obj instanceof  <%=jh.getClassName(cullObj)%>) {
          <%=jh.getClassName(cullObj)%> obj1 = (<%=jh.getClassName(cullObj)%>)obj;
<%
  {
      for(int i = 0; i < cullObj.getPrimaryKeyCount(); i++) {
         attr = cullObj.getPrimaryKeyAttr(i);
         
         String attrName = jh.getAttrName(attr);
         if( attrName.endsWith("List") ) {          
            attrName  = attrName.substring(0, attrName.length() - 4 );
         }
         String gsmName = Character.toUpperCase(attrName.charAt(0)) + attrName.substring(1);

         if(jh.getFullClassName(attr.getType()).equals(String.class.getName())) {
%>          if (!m_<%=attrName%>.equals(obj1.get<%=gsmName%>())) {
<%
         } else if (jh.getClassName(attr.getType()).equals("int")) {
%>          if (m_<%=attrName%> != obj1.get<%=gsmName%>()) {
<%
         } else {

           throw new IllegalStateException("Can not handle primary key field with type " + attr.getType()); 
         }
%>             return false;
         }
<%         
      } // end of for
  }
%>   
         return true;
      }
      return false;
   }
   
   public String toString() {
      StringBuffer ret = new StringBuffer();
      ret.append(super.toString());
      ret.append(",");
      ret.append("<%=jh.getClassName(cullObj)%>");
      ret.append("(");
<%      
  {
      for(int i = 0; i < cullObj.getPrimaryKeyCount(); i++) {
         attr = cullObj.getPrimaryKeyAttr(i);
         String attrName = jh.getAttrName(attr);
         if( attrName.endsWith("List") ) {          
            attrName  = attrName.substring(0, attrName.length() - 4 );
         }
         String gsmName = Character.toUpperCase(attrName.charAt(0)) + attrName.substring(1);

%>          ret.append(m_<%=attrName%>);
<%
      } // end of for
  }
%>   
      ret.append(")");
      return ret.toString();
   }
  
}
