          Specification of the Grid Engine Master monitoring
                            output format
   
                             Stephan Grell
                             05 July 2005
                               
0. Introduction

   The extended work with the existing profiling in the SGE 6.0
   system, which is used in the scheduler and the maser showed, that
   it is not enough to understand bottlenecks in the master. Futhermore
   it does not keep any statistics on the kind of messages processed. This
   information is vital to enhance the performance of the master and 
   undestand issues the customer is facing. This document will describe the
   kind of data, which is monitored and of the output is formated.

1. Discussion

   We currently have two different ways to get performance information about
   the qmaster:
   - qping              - health monitoring and commlib load
   - qmaster profiling  - measures different sections in the master

   The qmaster profiling output is printed to the master message file while
   qping has its own way print information. The monitoring should use both
   ways to ensure easy processing of the data. 
   
   The monitoring should be capable of monitor unlimited number of threads 
   without to many pitfalls. 
   
   The health monitoring is currently implemented on top of the profiling 
   library. Due to the similatity of the health monitoring and the performance
   monitoring, should that be changed. The health monitoring should be build
   on top of the new monitoring.

   The implementation documentation and how to use the monitoring in ones
   own code is described in the files 'source/uti/sge_monitor.[c|h]'

2. Monitoring Data:

   GDI thread (MT):

   Event Master Thread (EDT):
      
   Timed Event Thread (TET):
      
      
2. Format:

   Each monioring result for a thread is printed in one line. 
   Example:
   
   TET: runs: 0.10r/s out: 0.00m/s APT: 0.0001s/m idle: 100.00% \
        wait: 0.00% time: 10.00s
   MT(1): runs: 0.40r/s (reports 0.40/s requests 0.00/s acks: 0.00/s) \
          out: 0.00m/s APT: 0.0025s/m idle: 99.90% wait: 0.00% time: 5.00s
   MT(2): runs: 0.59r/s (reports 0.59/s requests 0.00/s acks: 0.00/s) \
          out: 0.00m/s APT: 0.0024s/m idle: 99.86% wait: 0.00% time: 5.05s
   EDT: runs: 2.00r/s out: 0.00m/s APT: 0.0007s/m idle: 99.87% \
        wait: 0.00% time: 5.00s

   Line format:     "<NAME><NR>: <RUNS>: <OPTIONAL> <EXTENDED_DATA>"

   <NAME>:          Thread name
   <NR>:            This is optional, it is only there, if more threads share 
                    the same name
   <RUNS>:          The number of thread loops per second 
   <OPTIONAL>:      The printed data depends on the configuration and the thread. 
                    However it is always enclosed in breakets 
                    (Example: "(reports...)"),
                    
   <EXTENDED_DATA>: "<OUT>: <APT>: <IDLE>: <WAIT>: <TIME>:"

   <OUT>:           The number of messages send per second.
   <APT>:           Average processing time for the thread loop.
   <IDLE>:          The percentage of the time spend waiting for an event, 
                    message, or...
   <WAIT>:          The percentage of the time spend waiting for important
                    locks.
   <TIME>:          The length of the timeframe the meassuring was done in
                    seconds.
        
3. Monitoring Data:

   3.1 GDI thread (MT):

      <RUNS> : Number of messages processed per second
      <OUT>  : Number of messages send per second
      <IDLE> : Percentage waited in the comlib for a new message to process
      <WAIT> : Percentage waited for the global lock or at the safe gard
      
      <OPTIONAL> : will have two settings: a default and an extended monitoring
         Default:
            <REPORTS>:  number of load and job reports processed per second
            <REQUESTS>: number of GDI requests per second. A multi GDI request
                        is only counted as one.
            <ACKS>:     number of event client acknowledges and execd acknowledges
      
         Extended:
            Is not defined yet. It should give enough information to understand
            bottlenecks and what is going on in the master. This most likely means,
            that each of the default categories will be broken apart and printed
            much more precisely. A qmaster_param will turn it on.
            
   3.2 Event Master Thread (EDT): (Under construction)
      <RUNS> : Number of times the EDT was triggered
      <OUT>  : Number of messages send per second to the event client
      <IDLE> : Percentage waited for the next trigger
      <WAIT> : Percentage waited for the global lock (Other important locks
               need to be determined.
      
      <OPTIONAL> : 
         Is not defined yet. Nothing is printed. A first guess is:
         - number of new events
         - number of acks
         - number of event clients
      
      
   3.3 Timed Event Thread (TET):
      <RUNS> : Number of times the EDT was triggered (new events and 
               event execution)
      <OUT>  : Number of messages send per second to the event client
      <IDLE> : Percentage waited for the next event
      <WAIT> : Percentage waited for the global lock 
      
      <OPTIONAL> : 
         Is not defined yet. Nothing is printed. A first guess is:
         - number of pending events
         - number of executed events per second and per event type
                    
