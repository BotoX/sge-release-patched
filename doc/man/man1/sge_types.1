'\" t
.\"___INFO__MARK_BEGIN__
.\"
.\" Copyright: 2004 by Sun Microsystems, Inc.
.\"
.\"___INFO__MARK_END__
.\"
.\" $RCSfile: sge_types.1,v $     Last Update: $Date: 2006-10-24 08:05:01 $     Revision: $Revision: 1.9 $
.\"
.\"
.\" Some handy macro definitions [from Tom Christensen's man(1) manual page].
.\"
.de SB		\" small and bold
.if !"\\$1"" \\s-2\\fB\&\\$1\\s0\\fR\\$2 \\$3 \\$4 \\$5
..
.\"
.de T		\" switch to typewriter font
.ft CW		\" probably want CW if you don't have TA font
..
.\"
.de TY		\" put $1 in typewriter font
.if t .T
.if n ``\c
\\$1\c
.if t .ft P
.if n \&''\c
\\$2
..
.\"
.de M		\" man page reference
\\fI\\$1\\fR\\|(\\$2)\\$3
..
.TH xxQS_NAME_Sxx_TYPES 1 "$Date: 2006-10-24 08:05:01 $" "xxRELxx" "xxQS_NAMExx User Commands"
.\"
.SH NAME
sge_types - xxQS_NAMExx type descriptions 
.\"
.SH DESCRIPTION
.\"
The xxQS_NAMExx
user interface consists of several programs and files. Some command line 
switches and several file attributes are types. The syntax for these
types is explained in this page.
.PP
.\"
.SH "TYPES"
The syntax of xxQS_NAMExx types in alphabetic order:
.\"
.\" host              => wc_host without pattern
.\" hostgroup         => wc_hostgroup without pattern
.\" pattern           => a pattern definition
.\" qdomain           => wc_qdomain without pattern
.\" qinstance         => wc_qinstance without pattern
.\" queue             => wc_queue without pattern
.\" range             := n[-m[:s]][,n[-m[:s]],...]
.\" user              => wc_user without pattern
.\" user_list         := user[,user,...]
.\" wc_host           := wildcard expression matching a host
.\" wc_hostgroup      := wildcard expression matching a hostgroup
.\" wc_job            := job-id|job-name|pattern
.\" wc_job_range      := wc_job[ -t range]
.\" wc_job_list       := wc_job[,wc_job,...]
.\" wc_job_range_list := wc_job_range[,wc_job_range,...]
.\" wc_qdomain        := wc_cqueue@wc_hostgroup
.\" wc_qinstance      := wc_cqueue@wc_host
.\" wc_queue          := wc_cqueue|wc_qdomain|wc_qinstance
.\" wc_queue_list     := wc_queue[,wc_queue,...]
.\" wc_user           := user_name|pattern
.\" wc_user_list      := wc_user[,wc_user,...]
.\" wc_project        := project|pattern
.\" wc_pe_name        := pe_name|pattern
.\"
.SS "\fBpattern\fP"
When ever patterns are used the following definition applies:
.PP
.nf
.ta \w'XXXXXXXX'u
"*"	matches any character and any number of characters 
	(between 0 and inv).
"?"	matches any character. It cannot be no character
"."	is the character ".". It has no other meaning
"\\"	escape character. "\\\\" = "\\", "\\*" = "*", "\\?" = "?"
"[xx]"	specifies an array or a range of allowed 
	characters for one character at a specific position
.fi
.PP
The pattern itself should be put into '"' to ensure, that
the clients get the pattern. The or '|' operator is not supported.
.PP
.SS "\fBrange\fP"
The task range specifier has the form 
.sp 1
n[-m[:s]][,n[-m[:s]], ...] 
or 
n[-m[:s]][ n[-m[:s]] ...] 
.sp 1
and thus consists of a comma or blank separated
list of range specifiers n[-m[:s]]. The ranges are concatenated to the
complete task id range. Each range may be a single number, a simple
range of the form n-m or a range with a step size.
.PP
.SS "\fBwc_host\fP"
A wildcard host specification (\fIwc_host\fP) is a 
wildcard expression which might match one or more hosts used in the cluster.
The first character of that string never begins with an at-character '@' even
if the expression begins with a wildcard character.
.PP
.\"
.nf
.ta
e.g.
.RS
.ta \w'XXXXXXXXXXXXX'u
*	all hosts
a*	all host beginning with an 'a'	
.fi
.\"
.SS "\fBwc_hostgroup\fP"
A wildcard hostgroup specification (\fIwc_hostgroup\fP) is a 
wildcard expression which might match one or more hostgroups.
The first character of that string is always a at-character '@'.
.PP
More information concerning hostgroups can be found in
.M hostgroup 5
.PP
.nf
.ta
e.g.
.RS
.ta \w'XXXXXXXXXXXXX'u
@*	all hostgroups in the cluster
@solaris	the @solaris hostgroup
.fi
.\"
.SS "\fBwc_job\fP"
The wildcard job specification is a placeholder for job ids, job names 
include job name wildcard expressions. A job id always references one
job, while the names and patterns might reference multiple jobs.
.sp 1
wc_job := job-id | job-name | pattern
.PP
.SS "\fBwc_job_range\fP"
The wildcard job range specification allows to reference specific array
tasks for one or multipe jobs. The job is referenced via wc_job and in
addition gets a range specifier for the array tasks.
.sp 1
wc_job_range := wc_job [ -t range]
.PP
.SS "\fBwc_job_list\fP"
The wildcard job list specification allows to reference multiple jobs 
with one command.
.PP
wc_job_list := wc_job [ , wc_job , ...]
.PP
.SS "\fBwc_job_range_list\fP"
The wildcard job range list (\fIwc_job_range_list\fP) is specified by 
one of the following forms:
.sp 1
.ta 0.5i
    \fIwc_job[ -t range][{, }wc_job[ -t range]{, }...]\fP
.ta 0.0i
.sp 1
If present, the \fItask_range\fP restricts the effect of the \fIqmod\fP
operation to the array job task range specified as suffix to the job id
(see the \fB\-t\fP option to
.M qsub 1
for further details on array jobs).
.PP
.SS "\fBwc_qdomain\fP"
\fIwc_qdomain\fP := \fIwc_cqueue\fP "@" \fIwc_hostgroup\fP
.PP
A wildcard queue domain specification (\fIwc_qdomain\fP) starts with a wildcard
cluster queue name (\fIwc_cqueue\fP) followed by an at-character '@' 
and a wildcard hostgroup specification (\fIwc_hostgroup\fP).
.PP
\fIwc_qdomain\fP are used to address a group of queue instances.
All queue instances residing on a hosts which is part of matching hostgroups
will be addressed. Please note, that \fIwc_hostgroup\fP always begins with
an at-character.
.PP
.nf
.ta
e.g.
.RS
.ta \w'XXXXXXXXXXXXX'u
*@@*	all queue instances whose underlaying
	host is part of at least one hostgroup
*@@solaris	all queue instances on hosts part of
	the @solaris hostgroup
.fi
.\"
.SS "\fBwc_cqueue\fP"
A wildcard cluster queue specification (\fIwc_cqueue\fP) is a 
wildcard expression which might match one or more cluster queues used in the cluster.
That string never contains an at-character '@' even if the expression begins with a 
wildcard character.
.PP
.\"
.nf
.ta
e.g.
.RS
.ta \w'XXXXXXXXXXXXX'u
*	all cluster queues
a*	all cluster queues beginning with an 'a'
.fi
.\"
.SS "\fBwc_qinstance\fP"
\fIwc_qinstance\fP := \fIwc_cqueue\fP "@" \fIwc_host\fP
.PP
A wildcard queue instance specification (\fIwc_qinstance\fP) starts 
with a wildcard cluster queue name (\fIwc_cqueue\fP) followed by an 
at-character '@' and a wildcard hostname (\fIwc_host\fP).
.PP
\fIwc_qinstance\fP expressions are used to address a group
of queue instances whose underlaying hostname matches the given pattern.
Please note that the first character of \fIwc_host\fP does never match 
the at-character '@'. 
.PP
.nf
.ta
e.g.
.RS
.ta \w'XXXXXXXXXXXXX'u
*@*	all queue instances in the cluster
*@b*	all queue instances whose 
	hostname begins with a 'b'
.fi
.\"
.SS "\fBwc_queue\fP"
\fIwc_queue\fP := \fIwc_cqueue\fP | \fIwc_qdomain\fP | \fIwc_qinstance\fP 
.PP
A wildcard queue expression (\fIwc_queue\fP) might either be a wildcard
cluster queue specification (\fIwc_cqueue\fP) or a wildcard queue domain
specification (\fIwc_qdomain\fP) or a wildcard queue instance specification
(\fIwc_qinstance\fP).
.PP
.nf
.ta 
e.g.
.RS
.ta \w'XXXXXXXXXXXXXXXXX'u
big_*1	cluster queues which begin with 
	"big_" and end with "1"
big_11@@solaris	@solaris queue domain
*@fangorn	all qinstances residing on host 
	fangorn
.fi
.\"
.SS "\fBwc_queue_list\fP"
\fIwc_queue_list\fP := \fIwc_queue\fP ["," \fIwc_queue\fP "," ...]
.PP
Comma separated list of wildcard queue expressions.
.PP
e.g. 
.RS
big, medium_*@@sol*, *@fangorn.sun.com
.PP
.SS "\fBwc_user\fP"
A wildcard user name expression is either a wildcard user name specification
or a full user name.
.PP
wc_user := user_name | pattern
.PP
.SS "\fbwc_user_list\fP"
A list of user names.
.PP
wc_user_list := wc_user [ , wc_user , ...]
.PP
.SS "\fBwc_project\fP"
A wildcard project name expression is either a wildcard project name specification
or a full project name.
.PP
wc_project := project | pattern
.PP
.SS "\fBwc_pe_name\fP"
A wildcard parallel environment name expression is either a wildcard pe name specification
or a full pe name.
.PP
wc_pe_name := pe_name | pattern
.PP
.\"
.SH SEE ALSO
.M qacct 1 ,
.M qconf 1 ,
.M qlimit 1
.\"
.SH COPYRIGHT
Copyright: 2004 by Sun Microsystems, Inc.
